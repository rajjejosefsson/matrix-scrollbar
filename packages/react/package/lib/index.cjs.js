"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var core=require("@matrix-scrollbar/core"),utils=require("@matrix-scrollbar/utils"),react=require("react"),reactDom=require("react-dom");function _defineProperty(r,e,t){return e in r?Object.defineProperty(r,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):r[e]=t,r}const defaultProps={autoHideThumb:!0,minThumbHeight:30};class MatrixScrollbar extends react.Component{constructor(...r){super(...r),_defineProperty(this,"_scrollbar",void 0),_defineProperty(this,"_scrollViewport",void 0)}get ownerWindow(){return this._scrollbar.scrollViewport.ownerDocument.defaultView}componentDidMount(){if(utils.isIE())return void console.warn("MatrixScrollbar doesnt support Internet Explorer yet...");let r=document.querySelector(`#${this.props.id}`);r||(r=reactDom.findDOMNode(this)),this._scrollViewport=r,this._scrollViewport?(this._scrollbar=new core.Scrollbar({scrollViewport:this._scrollViewport,totalHeight:this.props.totalHeight,minThumbHeight:this.props.minThumbHeight,className:this.props.className,autoHideThumb:this.props.autoHideThumb}),this._scrollbar.init()):console.warn("MatrixScrollbar: there were no target prop provided")}componentDidUpdate(r){this._scrollViewport&&this._scrollbar&&(this.props.totalHeight&&this.props.totalHeight===r.totalHeight||this._scrollbar.recount())}componentWillUnmount(){this._scrollbar.disconnect()}render(){return this.props.children}}_defineProperty(MatrixScrollbar,"defaultProps",defaultProps),exports.MatrixScrollbar=MatrixScrollbar;
